#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç–æ–≤—ã–π –±–æ—Ç —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
"""

import os
import sys
import logging
import json
import telebot
import threading
import time

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å –ø–æ–∏—Å–∫–∞ –º–æ–¥—É–ª–µ–π
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    handlers=[
        logging.StreamHandler()
    ]
)
logger = logging.getLogger(__name__)


def run_bot():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –±–æ—Ç–∞"""
    try:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
        tokens_path = "bot_tokens.json"
        if not os.path.exists(tokens_path):
            logger.error("–§–∞–π–ª —Ç–æ–∫–µ–Ω–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        with open(tokens_path, "r", encoding="utf-8") as f:
            tokens = json.load(f)
        
        bot_token = tokens.get("nlp_test")
        if not bot_token:
            logger.error("–¢–æ–∫–µ–Ω –±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        
        # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
        bot = telebot.TeleBot(bot_token)
        bot_info = bot.get_me()
        logger.info(f"‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω: @{bot_info.username}")
        
        @bot.message_handler(commands=['start', 'help'])
        def handle_start(message):
            try:
                logger.info(f"üë§ /start –æ—Ç {message.chat.id} - {message.from_user.username}")
                bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ–Ω–∏–º–∞–Ω–∏—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞. –ó–∞–¥–∞–π –º–Ω–µ –≤–æ–ø—Ä–æ—Å!")
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ /start: {e}")
        
        @bot.message_handler(func=lambda message: True)
        def handle_all_messages(message):
            """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è"""
            try:
                logger.info(f"üí¨ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {message.chat.id}: {message.text}")
                
                # –ü—Ä–æ—Å—Ç–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
                user_message = message.text.lower()
                
                # –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –¥–ª—è –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–æ–Ω–∏–º–∞–Ω–∏—è –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —è–∑—ã–∫–∞
                knowledge_base = {
                    "–ø—Ä–∏–≤–µ—Ç": ["–ø—Ä–∏–≤–µ—Ç", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π", "–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ", "hi", "hello"],
                    "–ø–æ–∫–∞": ["–ø–æ–∫–∞", "–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è", "–ø—Ä–æ—â–∞–π", "goodbye", "bye"],
                    "–ø–æ–º–æ—â—å": ["–ø–æ–º–æ–≥–∏", "–ø–æ–º–æ—â—å", "help", "–ø–æ–¥–¥–µ—Ä–∂–∫–∞", "support"],
                    "–≤—Ä–µ–º—è": ["–≤—Ä–µ–º—è", "–∫–æ—Ç–æ—Ä—ã–π —á–∞—Å", "time", "—Å–∫–æ–ª—å–∫–æ –≤—Ä–µ–º–µ–Ω–∏"],
                    "–∏–º—è": ["–∫–∞–∫ —Ç–µ–±—è –∑–æ–≤—É—Ç", "—Ç–≤–æ–µ –∏–º—è", "what is your name", "–∏–º—è"],
                    "–≤–æ–∑—Ä–∞—Å—Ç": ["—Å–∫–æ–ª—å–∫–æ —Ç–µ–±–µ –ª–µ—Ç", "—Ç–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç", "how old are you", "–≤–æ–∑—Ä–∞—Å—Ç"],
                    "—Ñ—É–Ω–∫—Ü–∏–∏": ["—á—Ç–æ —Ç—ã —É–º–µ–µ—à—å", "—Ç–≤–æ–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏", "what can you do", "—Ñ—É–Ω–∫—Ü–∏–∏"],
                }
                
                responses = {
                    "–ø—Ä–∏–≤–µ—Ç": "–ü—Ä–∏–≤–µ—Ç! –†–∞–¥ –≤–∏–¥–µ—Ç—å –≤–∞—Å! –ß–µ–º –º–æ–≥—É –ø–æ–º–æ—á—å?",
                    "–ø–æ–∫–∞": "–î–æ —Å–≤–∏–¥–∞–Ω–∏—è! –ë—É–¥—É —Ä–∞–¥ –ø–æ–º–æ—á—å –≤–∞–º —Å–Ω–æ–≤–∞!",
                    "–ø–æ–º–æ—â—å": "–Ø –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –ø–æ–º–æ—á—å —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—å —Ä–∞–∑–Ω—ã–µ –∑–∞–¥–∞—á–∏. –ü—Ä–æ—Å—Ç–æ –∑–∞–¥–∞–π—Ç–µ –º–Ω–µ –≤–æ–ø—Ä–æ—Å!",
                    "–≤—Ä–µ–º—è": "–ò–∑–≤–∏–Ω–∏—Ç–µ, —É –º–µ–Ω—è –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —Ç–µ–∫—É—â–µ–º—É –≤—Ä–µ–º–µ–Ω–∏, –Ω–æ —è –º–æ–≥—É –ø–æ–º–æ—á—å —Å –¥—Ä—É–≥–∏–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏!",
                    "–∏–º—è": "–ú–µ–Ω—è –∑–æ–≤—É—Ç –≤–∞—à –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫! –Ø —Å–æ–∑–¥–∞–Ω –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–º–æ–≥–∞—Ç—å –≤–∞–º.",
                    "–≤–æ–∑—Ä–∞—Å—Ç": "–Ø –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫, –ø–æ—ç—Ç–æ–º—É —É –º–µ–Ω—è –Ω–µ—Ç –≤–æ–∑—Ä–∞—Å—Ç–∞ –≤ –ø—Ä–∏–≤—ã—á–Ω–æ–º –ø–æ–Ω–∏–º–∞–Ω–∏–∏!",
                    "—Ñ—É–Ω–∫—Ü–∏–∏": "–Ø –º–æ–≥—É –æ—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –ø–æ–º–æ–≥–∞—Ç—å —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –∑–∞–¥–∞—á–∞–º–∏ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ!",
                    "default": "–°–ø–∞—Å–∏–±–æ –∑–∞ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ! –Ø –ø–æ—Å—Ç–∞—Ä–∞—é—Å—å –ø–æ–º–æ—á—å –≤–∞–º —Å —ç—Ç–∏–º –≤–æ–ø—Ä–æ—Å–æ–º. –ú–æ–∂–µ—Ç–µ —É—Ç–æ—á–Ω–∏—Ç—å, —á—Ç–æ –∏–º–µ–Ω–Ω–æ –≤–∞–º –Ω—É–∂–Ω–æ?"
                }
                
                # –ü–æ–∏—Å–∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –≤ –±–∞–∑–µ –∑–Ω–∞–Ω–∏–π
                response = responses["default"]
                for category, keywords in knowledge_base.items():
                    for keyword in keywords:
                        if keyword in user_message:
                            response = responses[category]
                            break
                    if response != responses["default"]:
                        break
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                bot.send_message(message.chat.id, response)
                
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")
                bot.send_message(message.chat.id, "–ò–∑–≤–∏–Ω–∏—Ç–µ, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –≤–∞—à–µ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è.")
        
        logger.info("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –æ–∂–∏–¥–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π...")
        bot.polling(none_stop=True)
        
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")


if __name__ == "__main__":
    run_bot()