import json
import os
import sys
import tempfile
from unittest.mock import patch, MagicMock

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É –≤ sys.path
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

def test_comprehensive_scenario_handling():
    """–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤"""
    print("–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–±–æ—Ç—ã —Å—Ü–µ–Ω–∞—Ä–∏–µ–≤")
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ç–µ—Å—Ç–∞
    with tempfile.TemporaryDirectory() as temp_dir:
        # –ú–æ–∫–∞–µ–º BOTS_DIR
        with patch('main.BOTS_DIR', temp_dir):
            
            from main import Scenario, save_scenario, load_scenario
            from blocks.schedule_block import ScheduleBlock
            import telebot
            from unittest.mock import Mock
            
            print("1. –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è —Å adminChatId...")
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π —Å—Ü–µ–Ω–∞—Ä–∏–π —Å adminChatId
            scenario_data = {
                "nodes": [],
                "edges": [],
                "adminChatId": "987654321"
            }
            scenario = Scenario(**scenario_data)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å—Ü–µ–Ω–∞—Ä–∏–π —Å–æ–∑–¥–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ
            scenario_dict = scenario.model_dump()
            assert 'admin_chat_id' in scenario_dict
            assert scenario_dict['admin_chat_id'] == "987654321"
            print("‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π —Å–æ–∑–¥–∞–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            
            print("2. –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å—Ü–µ–Ω–∞—Ä–∏—è...")
            # –ú–æ–∫–∞–µ–º UserManager
            with patch('main.UserManager') as mock_user_manager_class:
                mock_user_manager = Mock()
                mock_user_manager.get_bot_owner.return_value = "test_user_id"
                mock_user_manager_class.return_value = mock_user_manager
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π
                try:
                    save_scenario("test_bot", scenario, "test_user_id")
                    print("‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω")
                except Exception as e:
                    print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è: {e}")
                    return
            
            print("3. –¢–µ—Å—Ç –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ü–µ–Ω–∞—Ä–∏—è...")
            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ü–µ–Ω–∞—Ä–∏–π
            try:
                loaded_scenario = load_scenario("test_bot", "test_user_id")
                print("‚úÖ –°—Ü–µ–Ω–∞—Ä–∏–π —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω")
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω–æ–≥–æ —Å—Ü–µ–Ω–∞—Ä–∏—è
                loaded_dict = loaded_scenario.model_dump()
                assert 'admin_chat_id' in loaded_dict
                assert loaded_dict['admin_chat_id'] == "987654321"
                print("‚úÖ –î–∞–Ω–Ω—ã–µ —Å—Ü–µ–Ω–∞—Ä–∏—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ü–µ–Ω–∞—Ä–∏—è: {e}")
                return
            
            print("4. –¢–µ—Å—Ç —Ä–∞–±–æ—Ç—ã –±–ª–æ–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è...")
            # –°–æ–∑–¥–∞–µ–º –º–æ–∫-–æ–±—ä–µ–∫—Ç –±–æ—Ç–∞
            mock_bot = Mock(spec=telebot.TeleBot)
            mock_bot.get_me.return_value.username = "test_bot"
            
            # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –±–ª–æ–∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
            schedule_block = ScheduleBlock({
                "id": "test_schedule",
                "type": "schedule",
                "data": {
                    "dateQuestion": "–ù–∞ –∫–∞–∫—É—é –¥–∞—Ç—É –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?",
                    "timeQuestion": "–ù–∞ –∫–∞–∫–æ–µ –≤—Ä–µ–º—è –≤—ã —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è?"
                }
            })
            
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
            try:
                schedule_block.send_to_administrator(
                    bot=mock_bot,
                    user_chat_id=123456789,
                    date_str="2025-09-25",
                    time_str="14:30",
                    user_context={},
                    kwargs={
                        'scenario_data': {
                            'adminChatId': '987654321'
                        }
                    }
                )
                
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
                mock_bot.send_message.assert_called_once()
                call_args = mock_bot.send_message.call_args
                admin_chat_id = call_args[0][0]
                message = call_args[0][1]
                
                assert str(admin_chat_id) == '987654321', f"–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ —á–∞—Ç {admin_chat_id}"
                assert "–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å —á–µ—Ä–µ–∑ –±–æ—Ç–∞" in message, "–°–æ–æ–±—â–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏"
                
                print("‚úÖ –ë–ª–æ–∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
                
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –±–ª–æ–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è: {e}")
                return
            
            print()
            print("‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
            print()

if __name__ == "__main__":
    print("–ó–∞–ø—É—Å–∫ –∫–æ–º–ø–ª–µ–∫—Å–Ω–æ–≥–æ —Ç–µ—Å—Ç–∞...")
    print()
    
    test_comprehensive_scenario_handling()
    
    print("–ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–π —Ç–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω! üéâ")